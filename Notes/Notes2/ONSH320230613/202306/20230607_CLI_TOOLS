How many types of tools are there in Hibernate?
There are 2 types of tools are provided
1. gui
The gui tools are eclipse based plugins, which helps the developers in quickly building hibernate application. There are 7 different gui tools are available
	1.1 Mapping Editor
	1.2 Hibernate Configuration Editor
	1.3 Database Explorer
	1.4 HQL Editor
	1.5 Criteria Editor
	1.6 Console Configuration
	1.7 Reverse engineering
	
2. command-line tools
Command-Line tools helps in creating, updating or validating the database from an existing hibernate mappings. There are 3 Command-Line tools are there
	2.1 SchemaExport
	2.2 SchemaUpdate
	2.3 SchemaValidator
	
In Hibernate 6 these tools are replaced in support Jpa Schema Management Tools and added additional actions mapping the hbm2ddl legacy tools support in Hibernate

1. SchemaExport
The SchemaExport tool is used for creating/dropping an database schema, it supports 3 modes of operations
	1. CREATE      = drops an existing schema (if exists) and creates newly
	2. CREATE_ONLY = creates an new schema
	3. DROP        = drop an existing schema
	4. CREATE_DROP = during the startup of the application, it creates an new schema, and at the endof application upon closing the sessionFactory object it drops the schema
Since its a java class we need to run the java by passing hibernate.cfg.xml and specify the mode/operation (action) we want to perform.	before we run the application, we need to manually run the SchemaExport tool to create database tables, upon completion we can run the application.
	
instead of developer manually running the SchemaExport tool, we can let the SessionFactory takes care of running the tool during the startup of the application by specifying an property in hibernate.cfg.xml

<property name="hibernate.hbm2ddl.auto"></property>
1. create
2. create-drop
3. create-only
4. drop

now in hibernate 6 these tools are modified in support of jpa schema management tools and the above classes no more exist, but still we can configure hibernate.hbm2ddl.auto property in hibernate.cfg.xml so that the corresponding actions are mapped to jpa schema management actions

2. SchemaUpdate
used for updating the existing databases schema based on the mappings
hibernate.hbm2ddl.auto 
1. update

3. SchemaValidator
used for validating the existing database schema against mapping
hibernate.hbm2ddl.auto
1. validate


The equivalent of the hibernate.hbm2ddl.auto property in jpa persistence.xml is
jakarta.persistence.schema-generation.database.action
1. NONE (default)
2. CREATE_ONLY
3. CREATE = drop_and_create
4. DROP
5. CREATE-DROP
6. UPDATE
7. VALIDATE
8. TRUNCATE











































	



































