There are 4 id generators are provided by jpa api
1. AUTO
2. IDENTITY
3. SEQUENCE
4. TABLE

1. AUTO
AUTO id generator works same as native id generator, based on the underlying database on which we are running the application it works either as IDENTITY generator or SEQUENCE generator.
	
2. IDENTITY
IDENTITY id generator works for the databases that supports autoincrement colmns or identity columns where it fetches key value generated by the database after the persist/save operation

3. SEQUENCE
SEQUENCE id generator works for oracle database where it fetches the id vallue from the database sequence

4. TABLE
The other 2 id generators are specific to the database on which we are running the application, to ensure the ids are generated irrespective of the database jpa api has provided TABLE generator
It uses a database table keep track of the id values, it creates an record per each entity class and generates an id by incrementing the value of the record and returns the id value
	
by default it creates an table called "hibernate_unique_keys", it contains 2 columns pkColumnName, pkColumnValue. In pkColumnName it stores key for an entity class and pkColumnValue it stores the primary key value of the entity class 
	
hibernate_unique_keys
---------------------------	
pkColumnName  pkColumnValue
customer_no   10
	

#1 AUTO id generator

@Entity
@Table(name="customer")
class Customer {
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private int customerNo;
}

	
#2. IDENTITY id generator
@Entity
@Table(name="customer")
class Customer {
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private int customerNo;
}
	
#3. SEQUENCE id generator
@Entity
@Table(name="customer")
@SequenceGenerator(name="customergenerator", sequence="customer_sequence",allocationSize=1)	
class Customer {
	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="customergenerator")
	private int customerNo;
}
	
#4. TABLE id generator
@Entity
@Table(name="customer")
@TableGenerator(name="customer_table_gen", table="unique_keys", pkColumnName="key_name", pkColumnNameValue="customer_no", pkValueColumnName="next_key")
class Customer {
	@Id
	@GeneratedValue(strategy=GenerationType.TABLE, generator="customer_table_gen")
	private int customerNo;
}

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	



































