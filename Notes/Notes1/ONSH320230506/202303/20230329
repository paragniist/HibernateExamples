UML Class modelling
A class has to be in relationship with another class, to reuse the functionality or data of another class. There are 2 ways in which one class can be in relationship with another class
	
1. Inheritance
through Inheritance we extend one class from another class in reusing the functionality or the traits of another class. Inheritance establishes IS-A relationship between the classes. There are 3 forms of inheritance are there
1.1 Generalization
1.2 Specialization
1.3 Realization

2. Assocation
Assocation is the another way of achieving reusability. In assocation we declare one class as an attribute inside another class and using the object/holding the reference we reuse the data/functionality of another class. Association establishes HAS-A relationship between the classes. There are 3 forms of assocation are there
2.1 Assocation
2.2 Aggregation
2.3 Composition


1. Inheritance
All the 3 forms of Inheritance relationship are about resuing the functionality of another class only and are equally same, the only difference between them is how did we approached or established the relationship.
	
1.1 Generalization
In case of generalization the Inheritance relationship is established by identifying the common functionalities across several classes in our application and wrap them into one class for reusability. So that all these classes would be extended from the common base class to reuse the functionality.
This process of identifying the common functionalities across the existing classes in our application and forming the super class in reusing the functionality is called "generalization".
In case of generalization, always the super class would be an "abstract" class, since it is formed for only the sake of reusability.
	
	
	



























